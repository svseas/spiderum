{"_id":11437,"title":"Cùng làm việc trong ngành phần mềm, Programmer, Coder, Developer và Engineer khác nhau thế nào?\n","body":"<div><figure class=\"aligncenter\"><img src=\"https://lh4.googleusercontent.com/-YPqGTkD-Wbk/Wlr8jnRPm8I/AAAAAAAAAtc/YvXPnkYoA5YcDY85CuGlfncpSN5j9BjKgCLcBGAs/s1600/code.jpg\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Người ta thường sử dụng ba thuật ngữ: “Developer”, “Programmer”, “Coder” và \"Engineer\" để ám chỉ những người làm việc trong ngành công nghệ phát triển phần mềm. Nhưng đã bao giờ bạn tự hỏi họ là ai? Làm cách nào để phân biệt được Developer , Programer hay Coder ? &nbsp;Cùng xem qua câu trả lời trên Quora của Aideen NasiriShargh nhé.</div><div><strong>1. Coder</strong></div><div>Nếu bạn có 1 vấn đề rõ ràng và 1 giải pháp rõ ràng được mô tả bằng ngôn ngữ tự nhiên hoặc giải mã, bạn cần 1 ‪#‎Coder để chuyển chúng sang ngôn ngữ của máy tính (Chỉ code).</div><div>Coder - Thợ code, khi được giao việc code một chương trình nào đó thường cần phải kèm theo một bản mô tả chi tiết chương trình, rất thạo việc viết mã, viết nhanh và làm cho chương trình chạy đúng như mô tả, nhưng hầu hết trường hợp là sản phẩm không gọn gàng lắm nếu nhìn vô code. Chấm hết đừng đòi hỏi nhiều hơn nữa ở họ.</div><div>Bất cứ ai khi viết code thì thường được người không rành công nghệ gọi là một coder. Tuy nhiên, thuật ngữ này có thể xem xét và sử dụng cho những ai sống bằng viết chương trình ứng dụng mỗi ngày. Coder thường được sử dụng cho những programmer có ít kinh nghiệm và được đào tạo ít nhất. Họ thường không có đủ kiến thức về các thuật toán như programmer hay developer, cũng như thường là người mới bắt đầu vào nghề, và chỉ biết một&nbsp;ngôn ngữ lập trình&nbsp;duy nhất như là&nbsp;ngôn ngữ C,&nbsp;Java,&nbsp;PHP,...và nhiều ngôn ngữ khác. Coder thường được giao các công việc viết các đoạn mã đơn giản do các developer phân công. Trong một số trường hợp, coder còn được thay thế bằng&nbsp;\"Junior Programmer\"&nbsp;hoặc&nbsp;\"Junior Developer\".</div><div><strong>2. PROGRAMER</strong></div><div>Nếu bạn có 1 vấn đề rõ ràng nhưng không có giải pháp rõ ràng, bạn cần một ‪#‎Programer để giải quyết vấn đề, sau đó code. (Giải quyết vấn đề + code).</div><div><figure class=\"aligncenter\"><img src=\"https://lh4.googleusercontent.com/-3rhiTwLMw48/Wlr86aCG05I/AAAAAAAAAtg/Hdp_GIW_ROI_hzI0smJs88oWt2sVa9Y7wCLcBGAs/s1600/pro.jpg\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Programmer - Viết code, am hiểu các thuật toán, tập trung chuyên sâu ở một số hệ thống và ngôn ngữ lập trình, với các kỹ sư này thì chỉ cần nói rõ với anh ta tên chương trình và nói ngắn gọn chương trình đó làm gì, phần còn lại anh ta lo được.</div><div><strong>3. DEVELOPER</strong></div><div>Nếu bạn cảm thấy mình có vấn đề cần giải quyết nhưng không thể định nghĩa nó rõ ràng được, bạn cần 1 ‪#‎Developer để giúp bạn tìm ra vấn đề trước, sau đó xử lý nó. (Phân tích + Giải quyết Vấn Đề + Code).</div><div>Developer - Có tầm nhìn khái quát vấn đề, có khả năng sử dụng nhiều hệ thống khác nhau, nhiều ngôn ngữ lập trình, phối hợp chúng với nhau để giải quyết vấn đề. Những người này thường không chỉ làm việc chỉ với code mà cả với con người, thường là giao tiếp tốt, tiếp nhận vấn đề, phân tích và xây dựng giải pháp, rồi anh ta sẽ đưa ra thiết kế của các chương trình, cũng như cung cấp các mô tả chi tiết cho programmer và coder.</div><div><strong>4. TECHNICAL ARCHITECT</strong></div><div>Nếu bạn gặp vấn đề, và bạn biết rằng đó chỉ là vấn đề đầu tiên của 1 chuỗi dài dằng dặt các vấn đề và bạn không thể dự đoán trước các khả năng có thể xảy ra trong tương lai, bạn cần 1 ‪#‎Architect. Tương tự, nếu bạn có rất nhiều vấn đề, hàng chục hay hàng trăm #Developer làm việc trong nhiều vấn đề khác nhau và không ai trong số họ cần phải bận tâm về bức tranh toàn cục, bạn cũng cần #Architect.</div><div><strong>5. SOFTWARE ENGINEER</strong></div><div>Thuật ngữ \"#engineer\" hay \"#softwareengineer\" (Kỹ sư phần mềm) thường dành riêng cho những lập trình viên ở trình độ cao nhất. Engineer thường thông thạo ít nhất 3 ngôn ngữ lập trình và sử dụng nhiều kĩ năng để thiết kế và xây dựng cấu trúc tổng thể của ứng dụng. Họ kết hợp các mô-đun lại với nhau thành sản phẩm cuối cùng để hình thành nên giao diện trắng, phần cốt lõi của ứng dụng, sau đó làm việc với các programmer và developer để hoàn chỉnh tất cả tính năng theo thiết kế.</div><div><figure class=\"aligncenter\"><img src=\"https://lh4.googleusercontent.com/-8hpFKKyjYgM/Wlr9eSZYKSI/AAAAAAAAAto/pF2R0OmwSxoEfw0P8YZUEIvRxChuJa_rgCLcBGAs/s1600/soft.png\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Vì vậy chúng ta có thể đúc kết được cơ sở để phân biệt các thuật ngữ này là dựa vào kĩ năng như am hiểu về công nghệ, kĩ thuật, thiết kế, về thuật toán, kĩ năng viết code…, dựa trên kinh nghiệm code thực tế (có thể quy bằng số năm như 1 năm hay 2 năm, hoặc bằng các ứng dụng đã tạo ra…), và cũng có thể dựa trên vị trí công việc của mỗi người tại một công ty.</div>","cat_id":{"_id":12,"name":"Khoa học - Công nghệ"},"creator_id":15131,"created_at":"2018-01-14T10:07:23.235Z","down_point":2,"up_point":20,"tags":[]}