{"_id":9956,"title":"Bắt đầu với Phoenix Framework. First Init, Phoenix <> Docker","body":"<div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/194a7630b9bc11e7897f4f137f140aae.jpg\" class=\"fr-fic fr-dib img-focus\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Hôm nay mất ngủ vào spiderum thấy có bạn không thấy mình post bài mới nên comment post cũ bảo mình drop nghề này rồi thì phải. Vậy để chứng minh mình vẫn còn try hard code thì mình xin tạm dừng series Javascript để bắt đầu series <strong>Mất ngủ với Elixir/Phoenix.</strong> :D</div><div>Trước khi bắt tay vào khởi tạo project với Phoenix. Có lẽ chúng ta cần giới thiệu qua cho những bạn chưa biết đến Phoenix hay Elixir.</div><h1><strong>Elixir</strong></h1><div>Elixir là một ngôn ngữ lập trình hướng function (FPL) được tạo bởi José Valim và nó được chạy trên máy ảo của Erlang (BEAM - Erlang VM). Điều đó có nghĩa Elixir được thừa kế sức mạnh tuyệt vời của BEAM. Ứng dụng Elixir có thể chạy hàng trăm nghìn process trên cùng 1 server và chúng là micro process chiếm cực ít tài nguyên (đừng nhầm lẫn khái niệm process của elixir với process của OS).</div><h1><strong>Phoenix</strong></h1><div>Phoenix là một backend framework của Elixir được phát triển lần đầu tiên bởi Chris McCord. Thừa hưởng những ưu điểm vượt trội của Elixir thì Phoenix có những ưu điểm gì?</div><h3>Nhanh</h3><div>Để thấy Phoenix nhanh cỡ nào, hãy so sánh hiệu năng của Phoenix với các backend framework khác.&nbsp;</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/d0a17620b9ae11e7aaea231142fad476.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Bạn có thể thấy Phoenix có lẽ chỉ thua benchmark của Gin&nbsp;(Go framework)</div><h3><strong>Concurrent</strong></h3><div>Như đã nói với Elixir. Phoenix có thể handle hàng trăm nghìn process với chỉ 1 server. Nếu process không được dùng đến thì gần như không chiếm nguyên hay tốn cực ít tài nguyên (lightweight process), và thời gian để process sống lại thì rất nhanh. Bạn có thể khởi động và giám sát process, khi một process bị chết, Elixir có thể khởi động lại process đó gần sát với trạng thái cuối của process. Hơn nữa, bạn có thể thấy ví dụ như Nodejs chỉ có thể sử dụng 1 CPU nhưng Elixir có thể sử dụng đến tất cả các CPU core khả dụng .Vậy nên bạn có thể tin tưởng tốc độ và hiệu năng của Elixir/Phoenix.</div><h3>Cú pháp đẹp, gọn gàng, hiện đại</h3><div>Elixir được biết đến như 1 functional programming language đầu tiên hỗ trợ Lisp-style macros với cú pháp tự nhiên hơn</div><div><strong>pipeline :browser do</strong><br><strong>&nbsp; &nbsp; plug :accepts, [\"html\"]</strong><br><strong>&nbsp; &nbsp; plug :fetch_session</strong><br><strong>&nbsp; &nbsp; plug :protect_from_forgery</strong><br><strong>end</strong></div><div><strong>pipeline :api do</strong><br><strong>&nbsp; &nbsp; plug :accepts, [\"json\"]</strong><br><strong>&nbsp; &nbsp; plug MyApp.Plug.Auth</strong><br><strong>end</strong></div><div><strong>scope \"/\",&nbsp;MyApp do</strong><br><strong>&nbsp; &nbsp; pipe_through :browser</strong></div><div><strong>&nbsp; &nbsp; get \"/index\", PageController, :index</strong><br><strong>end</strong></div><div><strong>scope \"/api\", MyApp do</strong><br><strong>&nbsp; &nbsp; pipe_through :api</strong><br><strong>end</strong></div><div>Lúc đầu mình bắt đầu lập trình hàm với Elixir thì quả thực có chút bối rối. Nhưng khi đã quen với cú pháp của Elixir thì mọi thứ trở nên dễ dàng với những immutable, pattern matching, pipeline...</div><div>Bạn có thể tìm hiểu thêm về Elixir và Phoenix tại trang chủ của chúng:</div><div><a href=\"http://elixir-lang.org/\" target=\"_blank\">http://elixir-lang.org/</a><a target=\"_blank\" href=\"http://phoenixframework.org/\"></a><br><a href=\"http://phoenixframework.org/\" target=\"_blank\">http://phoenixframework.org/</a></div><div><span style=\"font-size: 28px; background-color: initial; color: rgb(0, 0, 0);\"><strong>First Init</strong></span></div><div>Để bắt đầu khởi tạo project phoenix đầu tiên. Bạn cần cài đặt elixir > 1.5 và phoenix 1.3, node > 7.0, docker và docker-compose. Mình đang sử dụng macOs nên các lệnh và kết quả dựa trên hệ điều hành mình đang sử dụng.</div><div>Với phoenix 1.3 bạn có thể khởi tạo phoenix app với lệnh:</div><div><strong>$> mix <a href=\"phx.new\" rel=\"noopener noreferrer\" target=\"_blank\">phx.new</a> yourapp</strong></div><div>Ở đây mình tạo app tên là teelog</div><div><strong>$> mix <a href=\"phx.new\" rel=\"noopener noreferrer\" target=\"_blank\">phx.new</a> teelog</strong></div><div>Sau khi bạn nhấn `y` thì các dependencies sẽ được cài đặt và compile.</div><h1>Dockerizing</h1><div>Để cài đặt môi trường bớt phức tạp. Mình sẽ đóng gói app với docker cùng các images có sẵn. Nếu bạn chưa biết docker. Bạn cứ tưởng tượng là công việc này mình sẽ tạo một môi trường ảo có những thứ cần thiết để app của bạn có thể chạy mà không cần cài đặt thủ công môi trường cho nó.</div><div>Bắt đầu bằng việc thêm file <a href=\"docker-compose.yml\" rel=\"noopener noreferrer\" target=\"_blank\"><em>docker-compose.yml</em></a> và <strong><em>Dockerfile</em></strong> vào root-directory</div><div>/docker-compose.yml</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/4437bf20b9b611e78e690ff7e9b8db25.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>/Dockerfile</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/9ff63a30b9b611e78cd74d39426c94be.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Ở đây bạn có thể thấy database sử dụng là postgresql. Cần config để phoenix app của chúng ta nhận môi trường được tạo. Mở file <strong>/config/dev.exs&nbsp;</strong>sửa thành:</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/02669340b9b711e7b1dfc112e4ebb05a.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Vậy cây thư mục của chúng ta sẽ như thế này:</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/2ee67b60b9b711e797d8b90624eb0289.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Để khởi tạo và chạy các services trong background. bạn thực hiện:</div><div><strong>$> docker-compose up -d</strong></div><div>Để thao tác với bash shell của phoenix app qua môi trường docker. Bạn thực hiện:&nbsp;</div><div><strong>$> docker-compose run phoenix bash</strong></div><h1><strong>Tạo database</strong></h1><div>Bước tiếp theo ta tạo database <strong>teelog_dev</strong> như đã khai báo trong config. Bạn vào bash shell ($> docker-compose run phoenix bash) rồi thực hiện:</div><div><strong>root@hash:/app# mix ecto.create</strong></div><div>Kết quả nếu thành công :'The database for Teelog.Repo has been created'</div><div>Để thoát bash shell bạn dùng lệnh '<strong>exit</strong>'</div><h1><strong>Khởi động server</strong></h1><div>Trong file <strong><em><a href=\"docker-compose.yml\" rel=\"noopener noreferrer\" target=\"_blank\">docker-compose.yml</a>&nbsp;</em></strong>mình đã expose các cổng của phoenix app ra ngoài là phoenix là 6600 và postgres là 5436. vậy khởi động server mình dùng lệnh sau:</div><div><strong>$> docker rm -f teelog_app; docker-compose run --name teelog_app --rm -p 6600:4000 phoenix iex -S mix phx.server</strong></div><div>Nếu thành công kết quả sẽ được như sau:</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/5db2b290b9b911e78e690ff7e9b8db25.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Để đơn giản khi chạy các lệnh khởi động ứng dụng. Mình viết 1 file script để đơn giản cho việc chạy các lệnh này:</div><div>/Makefile</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/9f85bdc0b9b911e7b6969f4a3af186ae.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Bằng Makefile bạn có thể khởi động app của mình một cách đơn giản hơn:</div><div>$> make app</div><div>Giờ bạn có thể mở browser và truy cập vào địa chỉ <strong>localhost:6600&nbsp;</strong> để tận hưởng thành quả:</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/ffbaa5c0b9b911e7b42611764b082c92.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Có gì sai sót, mong nhận được sự phản hồi của các bạn. Mình dự định sẽ viết 1 series về Phoenix mỗi khi mất ngủ. Mục tiêu sẽ là 1 trang web đầy đủ các tính năng với Phoenix. Link github:&nbsp;</div><div><a href=\"https://github.com/vthang95/teelog/tree/10458574f64c09a665703e4e5647030c9203cd40\" target=\"_blank\">https://github.com/vthang95/teelog/tree/10458574f64c09a665703e4e5647030c9203cd40</a></div><div>Cám ơn các bạn đã đọc bài viết của mình.</div>","cat_id":{"_id":12,"name":"Khoa học - Công nghệ"},"creator_id":2496,"created_at":"2017-10-25T19:36:23.990Z","down_point":0,"up_point":16,"tags":[]}