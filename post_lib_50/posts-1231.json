{"_id":17364,"tags":[{"_id":"5b1576ab4616047daf0f84b4","name":"LẬP TRÌNH"},{"_id":"5bff4b8f81e6c80e6e257d8a","name":"CĂN BẢN"}],"up_point":195,"down_point":1,"title":"Muốn học lập trình thì nên bắt đầu từ đâu?","body":"<pre><em>Đây là một câu hỏi rất phổ biến cho những ai còn tò mò và đang chập chững tiếp cận với thế giới lập trình nhưng bị chết trôi bởi quá nhiều nguồn tràn lan trên mạng. Vì đồng thời cũng nhận được kha khá những tin nhắn của mọi người hỏi về vấn đề này, mình nghĩ đây là một dịp tốt để chia sẻ những nguồn hữu ích mà bản thân đã dùng để tự học trong khoảng thời gian đầu.</em></pre><hr><h3>A.&nbsp;Chọn tư duy đúng để tiếp cận</h3><div>Nếu bạn tình cờ nghe được một trong 2 lời khuyên nghe khá hợp tình hợp lý như sau:</div><blockquote><div><strong>Myth #1</strong>: \"<em>Em phải đến trường trước cái đã. Bởi muốn làm game thì phải học về toán vi tích phân (<a href=\"https://en.wikipedia.org/wiki/Vector_calculus\" rel=\"noopener noreferrer\" target=\"_blank\">Vector Calculus</a>), muốn xây hệ thống thì phải học đại số Boolean (<a href=\"https://en.wikipedia.org/wiki/Boolean_algebra\" rel=\"noopener noreferrer\" target=\"_blank\">Boolean Algebra</a>), vân vân và mây mây...\"</em></div></blockquote><div><strong>=> Thực tế</strong>: học hỏi\b một kỹ năng mới là cả một quá trình cần động lực rất lớn để tìm hiểu và tiếp thu. Nếu bạn bắt đầu bằng những thứ khô khan như kiến thức sách vở thay vì phấn khích tìm tòi cách giải quyết những vấn đề thú vị bạn gặp phải trong cuộc sống hằng ngày, việc học sẽ rất nhanh trở nên nhàm chán và khiến bạn dễ bị nản. Việc đến trường có thể sẽ trở nên thiết yếu khi bạn thật sự nghiêm túc với việc kiếm sống bằng lập trình, nhưng để bắt đầu thì không nhất thiết phải đợi đến lúc học xong đại học mới dám làm.</div><blockquote><div><strong>Myth #2</strong>:<em>&nbsp;\"Anh nghĩ tốt nhất là em nên học ngôn ngữ abc vì nó xyz...\"</em></div></blockquote><div><strong>=> Thực tế:&nbsp;</strong>đây là một lời khuyên phần lớn mang tính chất thành kiến và sở thích cá nhân. Hãy tưởng tượng những ngôn ngữ lập trình như những dụng cụ xây nhà được thiết kế cho nhiều mục đích khác nhau. Bạn không thể đóng đinh bằng xẻng, cũng như \bmong đợi ngôn ngữ ưa thích của người khác có thể giải quyết vấn đề của chính mình. Vì ngôn ngữ lập trình là một công cụ, bạn nên quan tâm đến việc <em>\"</em><em>Học ngôn ngữ này sẽ giúp ích được gì cho vấn đề mình đang cố giải quyết?</em><em>\"&nbsp;</em>hơn là <em>\"</em><em>Ngôn ngữ nào là tốt nhất để học?</em><em>\".&nbsp;</em>Hãy học cách lắng nghe những người đi trước, nhưng đừng mù quáng làm theo trong khi chưa hiểu rõ mục đích của mình là gì. Ở phần dưới, mình sẽ nói rõ hơn về cách chọn ngôn ngữ lập&nbsp;trình phù hợp.</div><div><em><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/95dbbfd0f37511e8bcad53c94a6d8083.jpg\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\">Ảnh: Google</figcaption></figure></em></div><div>Ngôn ngữ lập trình cũng giống như ngôn ngữ con người chúng ta vậy. Bạn có thể biết viết tiếng Pháp, nhưng cần biết nhiều hơn thế để trở thành một nhà văn. Tương tự, bạn có thể biết rõ <em>syntax</em> (cú pháp câu lệnh) của một ngôn ngữ lập trình, nhưng cần biết nhiều hơn thế để giải quyết vấn đề bằng ngôn ngữ đó. Một điểm khác biệt lớn với ngôn ngữ con người là sau khi bạn đã thuần thục được ngôn ngữ lập trình đầu tiên, sẽ dễ hơn rất nhiều để học và hiểu những ngôn ngữ thứ 2, 3, 4... vì:&nbsp;</div><div><strong>(1)</strong> Đa số syntax giữa những ngôn ngữ lập trình phổ biến thường khá giống nhau</div><div><strong>(2)</strong> Trong lúc học ngôn ngữ lập trình đầu tiên, bạn có lẽ đã nắm được những khái niệm cơ bản cần thiết và dần quen với cách tư duy logic có hệ thống</div><div>*** Phần này được tham khảo từ video cực kỳ hữu ích của Kevin Cheers:</div><div><div class=\"scrape-url\" contenteditable=\"false\"><a class=\"scrape-info\" href=\"https://www.youtube.com/watch?v=mvK0UzFNw1Q\" rel=\"nofollow\" target=\"_blank\"><strong class=\"markup-strong\">How to Learn to Code</strong><br><em class=\"markup-em\">Thanks to https://www.youtube.com/user/NerdyAndQuirky for the question! Shares appreciated! Twitters: https://twitter.com/cheerskevin There you go. Here’s th...</em>www.youtube.com</a><a class=\"scrape-thumb\" target=\"_blank\" rel=\"nofollow\" href=\"https://www.youtube.com/watch?v=mvK0UzFNw1Q\" style=\"background-image:url(https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/67b04860f36611e8a7a861181b5012d5.jpg);\"></a></div></div><h3><br></h3><h3>B.&nbsp;Chọn giáo trình phù hợp để áp dụng</h3><div>Vì mỗi người có một cách học và tiếp cận kiến thức khác nhau, bạn nên tự làm vài phép thử nho nhỏ để xem cách học nào là phù hợp nhất cho bản thân. Có thể bắt đầu bằng những bước phổ biến được tổng hợp lại cho người mới học lập trình sau đây:</div><h4>1. Xác định hướng đi</h4><div>Tìm một (vài) vấn đề / project <strong>nhỏ</strong> mà bạn quan tâm và thôi thúc muốn giải quyết. Nó có thể là một chương trình phần mềm giúp bạn giải toán nhanh hơn, hoặc một trò chơi giúp bạn học tiếng Anh tốt hơn. Ý tưởng nên bắt đầu từ sự hứng thú vì nó sẽ giúp bạn giữ động lực để học lập trình, đồng thời được áp dụng những kiến thức học được vào thực tế.</div><div>(Nếu bí ý tưởng quá thì chọn <a href=\"http://inventwithpython.com/blog/2012/02/20/i-need-practice-programming-49-ideas-for-game-clones-to-code/\" rel=\"noopener noreferrer\" target=\"_blank\">một trò chơi yêu thích</a> của bạn rồi clone lại cũng được nè)</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/e2462190f36a11e887c529d04005313d.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><h4>2. Chọn ngôn ngữ lập trình</h4><div>Tìm hiểu trên Google xem ngôn ngữ lập trình nào là thích hợp nhất cho project của bạn.</div><div><figure class=\"aligncover\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/0cb4dbf0f37611e8bcad53c94a6d8083.png\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div><div>Hoặc dùng website dưới đây để giúp bạn định hướng ngôn ngữ lập trình:</div><div><div class=\"scrape-url\" contenteditable=\"false\"><a class=\"scrape-info\" href=\"http://www.bestprogramminglanguagefor.me/\" rel=\"nofollow\" target=\"_blank\"><strong class=\"markup-strong\">Best Programming Language For Me in 2018</strong><br><em class=\"markup-em\">What programming language should you learn this year? Take our 2-min quiz to find out which programming language to learn, whether it's for your career, startup, or side project!</em>www.bestprogramminglanguagefor.me</a><a class=\"scrape-thumb\" target=\"_blank\" rel=\"nofollow\" href=\"http://www.bestprogramminglanguagefor.me/\" style=\"background-image:url(https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/a1625b20f65911e886e595511a16efc7.png);\"></a></div></div><div><strong>***QUAN TRỌNG:</strong></div><div>Anh <a href=\"https://spiderum.com/nguoi-dung/lucius#profile\" rel=\"noopener noreferrer\" target=\"_blank\">Hoàng Trần</a> trong phần comment đã đóng góp được một vài ý quan trọng mà mình đã thiếu sót bỏ qua ==> đây là giai đoạn bạn có thể tham khảo nhiều hơn ý kiến của người đi trước (<strong>một cách có chọn lọc</strong>):</div><blockquote><div>Nếu bạn muốn bước vào ngành này và không biết bắt đầu từ đâu thì có thể nhảy vào thử một ngôn ngữ gì đó phổ thông để làm quen với tư duy lập trình, sau đó khi hiểu hơn rồi thì tùy theo mục đích của mình mà chọn ngôn ngữ cho hợp lý. Khi họ đã hiểu được lập trình là gì, chúng ta mới cho họ tiếp xúc và chọn lấy một con 'đường' họ phù hợp.&nbsp;</div><div>Tuy nhiên, nếu lạm dụng việc \"làm quen\" này quá thì đúng là sẽ dẫn đến việc biết mỗi thứ một ít và không có đủ kiến thức để tự phát triển. Tốt nhất vẫn là giỏi một hoặc vài thứ, những thứ khác biết ở mức vừa và đủ (cần chứ không bắt buộc), vì trong công việc đôi khi cái mình giỏi nhất không phải cái phù hợp nhất để giải quyết vấn đề. Nhưng để biết rằng cái 'này' hay cái 'kia' có phù hợp nhất hay không thì là cần phải học về nó, tìm hiểu về nó trước đã.&nbsp;</div><div>Với người mới thì việc làm quen với tư duy lập trình đã khá là gian nan rồi, vấn đề ở đây là người mới rất dễ bỏ cuộc. Bài toán lớn nhất khi hướng dẫn một người mới không phải là làm thế nào họ có thể đi làm trong vài tháng, bởi cái cần lo chính là họ sẽ bỏ cuộc trong vài ngày, vài tuần.</div></blockquote><h4>3. Chọn nguồn</h4><div>Hãy cố gắng tìm và cố định một nguồn học có chất lượng cao, thân thiện với người mới học và được nhiều người đi trước gợi ý. Rồi sau đó, bạn có thể&nbsp;chia nhỏ từng phần ra thành mục tiêu để đạt được trong một khoảng thời gian nhất định.</div><div><a href=\"https://github.com/Michael0x2a/curated-programming-resources/blob/master/resources.md\" rel=\"noopener noreferrer\" target=\"_blank\">Michael0x2a's Github</a> - Tổng hợp rất nhiều nguồn cho nhiều ngôn ngữ lập trình khác nhau</div><div><a href=\"https://github.com/EbookFoundation/free-programming-books/blob/master/free-programming-books.md\" rel=\"noopener noreferrer\" target=\"_blank\">tiago-atha's Github</a> - Tổng hợp một kho sách miễn phí cho lập trình</div><div><a href=\"https://www.freecodecamp.org/\" rel=\"noopener noreferrer\" target=\"_blank\">FreeCodeCamp</a> - Nhiều khoá học tốt có uy tín và hẳn một cộng đồng lớn để luôn hỗ trợ khi bạn cần. Trên đây cũng có khá nhiều số lượng bài viết hướng dẫn cho người mới mà mình thấy rất hữu ích nữa.</div><div><a href=\"https://www.codecademy.com/\" rel=\"noopener noreferrer\" target=\"_blank\">CodeAcademy</a> - Giao diện đẹp để học và tương tác với code nhưng tập trung khá nhiều về mảng lý thuyết</div><div><a href=\"https://teachyourselfcs.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Teach Yourself CS</a> - Tổng hợp và gợi ý nguồn sách cho những khái niệm cốt lõi của Computer Science&nbsp;</div><div><a href=\"https://github.com/ossu/computer-science\" rel=\"noopener noreferrer\" target=\"_blank\">Open Source Society University</a> - Tổng hợp nhiều nguồn học trong một giáo trình đại học online mà bạn có thể tự nghiên cứu ở nhà</div><h4><strong><em>Bổ sung nguồn từ các Spidernerds đáng yêu:</em></strong></h4><div><a href=\"https://cs61a.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Berkeley's CS61A</a> & <a href=\"https://sp18.datastructur.es/\" rel=\"noopener noreferrer\" target=\"_blank\">CS61B</a> - 2 khoá Computer Science căn bản đến từ trường đại học nổi tiếng Berkeley. Cả 2 trang web của khoá học được thiết kế rất rõ ràng và dễ theo dõi. (<a href=\"http://huskywannafly.spiderum.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Husky</a>)</div><div><a href=\"https://www.geeksforgeeks.org/\" rel=\"noopener noreferrer\" target=\"_blank\">GeeksForGeeks</a> - trang này nổi từ đời đầu 2010~2013, trước đây UI không đẹp nhưng mới đây đã nâng cấp phần giao diện trông ổn hơn rất nhiều. Điểm cộng: cách dàn content phân chia level rõ ràng thành Easy --> Medium --> Hard.. (<a href=\"https://spiderum.com/nguoi-dung/joker777\" rel=\"noopener noreferrer\" target=\"_blank\">Jesterϕ</a>) &nbsp;</div><div><a href=\"https://www.tutorialspoint.com/\" rel=\"noopener noreferrer\" target=\"_blank\">TutorialPoint</a> - cũng vừa được tút lại giao diện. Một trong các nguồn có lộ trình phân chia rạch ròi vẫn còn tồn tại, và đồng thời đã cải tiến khá nhiều phần Playground để vọc vạch thực hành. (<a href=\"https://spiderum.com/nguoi-dung/joker777\" rel=\"noopener noreferrer\" target=\"_blank\">Jesterϕ</a>)</div><div><a href=\"https://learn-anything.xyz/\" rel=\"noopener noreferrer\" target=\"_blank\">Learn-Anything</a> - sử dụng logic của Alfred Workflow để hiện gợi ý cho từ khoá người dùng nhập. Để ý góc phải của kết quả tìm kiếm có dấu (-) và (+) ==> đó là rate review của người dùng để đánh giá kết quả nguồn sau khi học để người sau cân nhắc hơn đỡ tốn thời gian. (<a href=\"https://spiderum.com/nguoi-dung/joker777\" rel=\"noopener noreferrer\" target=\"_blank\">Jesterϕ</a>)</div><h4>4. Biết nơi để hỏi</h4><div>Trong quá trình học, bạn nên tích cực tra khảo trên mạng và hỏi những người đi trước trên những cộng đồng lớn. &nbsp;</div><div><a href=\"https://stackoverflow.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Stack OverFlow</a> (bạn không thể sống thiếu trang này đâu, tin mình đi)</div><div><a href=\"https://www.reddit.com/r/learnprogramming\" rel=\"noopener noreferrer\" target=\"_blank\">Reddit</a>&nbsp;</div><div><a href=\"https://www.quora.com/topic/Computer-Programming\" rel=\"noopener noreferrer\" target=\"_blank\">Quora</a></div><div><a href=\"https://daynhauhoc.com/\" rel=\"noopener noreferrer\" target=\"_blank\">DayNhauHoc</a></div><div><a href=\"http://diendan.congdongcviet.com/activity.php\" rel=\"noopener noreferrer\" target=\"_blank\">Cộng Đồng Lập Trình Việt Nam</a></div><h4>5. Tăng kinh nghiệm</h4><div>Hoàn thành \u001cnhiều projects đa dạng về độ khó khác nhau trong cùng một ngôn ngữ lập trình đó. Hoặc bạn có thể tăng khả năng tiếp cận và giải quyết vấn đề với những câu đố hóc búa đòi hỏi óc phân tích.</div><div><a href=\"https://www.hackerrank.com/\" rel=\"noopener noreferrer\" target=\"_blank\">HackerRank</a></div><div><a href=\"https://www.codewars.com/\" rel=\"noopener noreferrer\" target=\"_blank\">CodeWars</a></div><div><a href=\"https://www.topcoder.com\" rel=\"noopener noreferrer\" target=\"_blank\">TopCoder</a></div><div>***Phần này được tham khảo và dịch từ <em>Reddit</em> (khuyến khích nên đọc bản gốc vì nó chi tiết và sâu hơn rất nhiều bài của mình)</div><div><div class=\"scrape-url\" contenteditable=\"false\"><a class=\"scrape-info\" href=\"https://www.reddit.com/r/learnprogramming/wiki/faq\" rel=\"nofollow\" target=\"_blank\"><strong class=\"markup-strong\">faq - learnprogramming</strong><br><em class=\"markup-em\">Reddit gives you the best of the internet in one place. Get a constantly updating feed of breaking news, fun stories, pics, memes, and videos just for you. Passionate about something niche? Reddit has thousands of vibrant communities with people that share your interests. Alternatively, find out what’s trending across all of Reddit on r/popular. Reddit is also anonymous so you can be yourself, with your Reddit profile and persona disconnected from your real-world identity.</em>www.reddit.com</a><a class=\"scrape-thumb\" target=\"_blank\" rel=\"nofollow\" href=\"https://www.reddit.com/r/learnprogramming/wiki/faq\" style=\"background-image:url(https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/null);\"></a></div></div><h2><br></h2><h3>3 SAI LẦM NEWBIE THƯỜNG MẮC PHẢI:</h3><div><strong>1. Thụ động ngồi xem và đọc tài liệu rồi nghĩ bạn hiểu rõ khái niệm/kiến thức rồi.</strong> Điều này rất dễ xảy ra khi nhìn một khái niệm trong lập trình có vẻ dễ hiểu trên lý thuyết nhưng thực \btế lại rất khó để thành thạo ở ngoài đời. Cách tốt nhất để tránh trường hợp này là bạn nên tích cực <em>làm, làm và làm</em> thật nhiều bài tập được đưa ra và luôn suy nghĩ cách làm cách nào để viết code tốt hơn.</div><blockquote><div>I hear and I forget. I see and I remember. I do and I understand.&nbsp;</div><div style=\"text-align:right;\">Confucius</div></blockquote><div><strong>2. Liên tục đổi qua nhiều ngôn ngữ lập trình khác nhau trong khi chưa nắm rõ và thành thạo một cái.</strong> Bạn phải luôn nhớ, cốt lõi của lập trình là tư duy giải quyết vấn đề chứ không phải ngôn ngữ, và cả quá trình chỉ có thể được hoàn thiện qua hành động và kinh nghiệm theo thời gian. Việc nhảy lung tung qua nhiều ngôn ngữ dù chưa nắm được những khái niệm cơ bản sẽ làm bạn mất thời gian và đôi khi cả hoang mang nữa.</div><div><strong>3. Xong một nguồn học rồi thì nghĩ là mình đã học xong mọi thứ và không cần phải học gì nữa.</strong> Sai nhé, có người trong ngành này 5-10 năm rồi nhưng vẫn luôn luôn có cái mới để học, nên đừng rơi vào bẫy tự mãn phổ biến này và giữ cái tâm tò mò muốn học hỏi cái mới. Đây là điểm khác biệt lớn giữa một một người lập trình viên tốt và một người lập trình viên tồi.</div><h2><br></h2><h2>Kết</h2><div>Sau 4 tiếng đồng hồ ngồi lọc và gom một lượng lớn những nguồn mà bản thân đã tìm tòi từ 2 năm trước, tác giả tạm thời hết mana để viết một cái kết đàng hoàng. Anh em nào có nguồn hay thì cứ comment, mình sẽ thêm vào sau nhé :)</div><div>Scarlet.</div><div><br></div><div><u>P/S. fun fact</u>: hồi nãy đúng ra mình viết hết bài rồi mà mất wifi + lag máy tính -> mất dữ liệu nên phải ngồi hơn 1 tiếng viết lại, lúc đó ngồi đực mặt nhìn màn hình mà chực chờ như muốn khóc. Hầy, khổ thân con bé...</div><div><figure class=\"aligncenter\"><img src=\"https://s3-ap-southeast-1.amazonaws.com/img.spiderum.com/sp-images/34b404a0f37b11e8998039ad750f8d9e.jpg\" class=\"fr-fic fr-dib\"><figcaption class=\"image-description\" contenteditable=\"false\" placeholder=\"Chú thích ảnh (không bắt buộc)\"><br></figcaption></figure></div>","cat_id":{"_id":12,"name":"Khoa học - Công nghệ"},"creator_id":24561,"created_at":"2018-11-29T02:14:39.565Z"}